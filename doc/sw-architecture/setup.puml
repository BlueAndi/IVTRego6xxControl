@startuml setup

title Setup

participant "main" as main
participant "Arduino" as arduino
participant "IVTRego6xxCtrl" as ivtRego6xxCtrl
participant "IVTRego6xxSensor" as ivtRego6xxSensor
participant "IVTRego6xxBinarySensor" as ivtRego6xxBinarySensor

autoactivate on

-> main

    note over main,ivtRego6xxBinarySensor
        Perform Arduino setup.
    end note

    main -> arduino: setup
        arduino -> ivtRego6xxCtrl: create instance
        arduino <-- ivtRego6xxCtrl
        arduino -> ivtRego6xxCtrl: set component source "ivt_rego6xx_ctrl"
        arduino <-- ivtRego6xxCtrl

        note over arduino,ivtRego6xxBinarySensor
            The following loops just show the principle how to combine
            any kind of sensor or button with the IVTRego6xxCtrl.
        end note

        loop for all configured sensors
            arduino -> ivtRego6xxSensor: create instance with command id and address\ndefined by ivt_rego6xx_ctrl_cmd and ivt_rego6xx_ctrl_addr in IVTRego6xxCtrl.yaml
            arduino <-- ivtRego6xxSensor
            arduino -> ivtRego6xxCtrl: register sensor IVTRego6xxSensor
            arduino <-- ivtRego6xxCtrl
        end

        loop for all configured binary sensors
            arduino -> ivtRego6xxBinarySensor: create instance with command id and address\ndefined by ivt_rego6xx_ctrl_cmd and ivt_rego6xx_ctrl_addr in IVTRego6xxCtrl.yaml
            arduino <-- ivtRego6xxBinarySensor
            arduino -> ivtRego6xxCtrl: register binary sensor IVTRego6xxBinarySensor
            arduino <-- ivtRego6xxCtrl
        end

        arduino -> ivtRego6xxCtrl: setup
        arduino <-- ivtRego6xxCtrl
    main <-- arduino

    note over main,ivtRego6xxBinarySensor
        Next step is the Arduino loop.
    end note

<-- main

@enduml
