@startuml class_diagram

package "esphome" {

    package "uart" as uartPckg {

        class "UARTDevice" as uartDevice {
            + available() : int
            + read() : int
            + peek() : int
            + write(data: uint8_t) : size_t
        }
    }

    class "Component" as comp {
        + setup()
        + loop()
    }

    package "sensor" as sensorPckg {

        class "Sensor" as sensor {
            + publish_state(state: float)
        }
    }

    package "ivt_rego6xx_ctrl" as ivtRego6xxCtrlPckg {

        class "IVTRego6xxCtrl" as ivtRego6xxCtrl {
            - m_ctrl : Rego6xxCtrl
            - m_adapter : StreamUartDevAdapter
            + setup()
            + loop()
        }

        class "IVTRego6xxSensor" as ivtRego6xxSensor {
        }
    }
}

note bottom of ivtRego6xxCtrl
    This class is responsible for controlling the
    IVT Rego6xx series heat pump. It is responsible
    for reading and publishing the sensor values,
    as well as controlling the heat pump.
end note

note bottom of ivtRego6xxSensor
    This class is responsible for publishing the
    sensor values of the IVT Rego6xx series heat pump.
end note

class "StreamUartDevAdapter" as streamUartDevAdapter {
    - m_uartDevice: UARTDevice&
    + StreamUartDevAdapter(uartDevice: UARTDevice&)
}

note bottom of streamUartDevAdapter
    This class is responsible for adapting the UARTDevice
    class to the Stream interface.
end note

class "Rego6xxCtrl" as rego6xxCtrl {
    + Rego6xxCtrl(stream: Stream&)
    + process()
}

note top of rego6xxCtrl
    This class communicates with the heatpump controller
    via stream interface. It provides the high-level
    control of the heat pump.
end note

package "Arduino" as arduinoPckg {
    interface "Stream" as stream
}

uartDevice <|--- ivtRego6xxCtrl
comp <|-- ivtRego6xxCtrl
rego6xxCtrl <-- ivtRego6xxCtrl: <<own>>
streamUartDevAdapter <-- ivtRego6xxCtrl: <<own>>

stream <|.. streamUartDevAdapter: <<realize>>
uartDevice <.. streamUartDevAdapter: <<use>>

rego6xxCtrl ..> stream: <<use>>

sensor <|--- ivtRego6xxSensor

@enduml
