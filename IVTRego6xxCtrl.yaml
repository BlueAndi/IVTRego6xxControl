# ESPHome configuration for the IVT Rego 600/601 heat pump controller.
# https://esphome.io/index.html
esphome:
  name: heatpumpctrl
  includes:
    - lib/Rego6xx
    - lib/Utilities
  platformio_options:
    build_flags:
      - -I src/Rego6xx
      - -I src/Utilities

# Platform configuration.
# https://esphome.io/components/esp32.html
esp32:
  board: esp32-poe-iso
  framework:
    type: arduino

# Enable logging.
# https://esphome.io/components/logger.html
logger:
  level: DEBUG

# Enable Home Assistant API.
# https://esphome.io/components/api.html
api:
  password: ""

# Enable OTA updates.
# https://esphome.io/components/ota.html
ota:
  - platform: esphome
    password: ""

# Enable ethernet interface.
# https://esphome.io/components/ethernet.html
ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0
  power_pin:
    number: GPIO12
    ignore_strapping_warning: true

# Configure UART interface for heatpump communication.
# https://esphome.io/components/uart.html
uart:
  id: uart_heatpump
  rx_pin: GPIO4
  tx_pin: GPIO3
  baud_rate: 115200
  debug:
    direction: BOTH
    dummy_receiver: true
    after:
      timeout: 500ms

# Webserver configuration
# https://esphome.io/components/web_server.html
web_server:
  port: 80

# MQTT configuration
mqtt:
  broker: homeassistant.fritz.box
  port: 1883
  username: !secret mqtt_user
  password: !secret mqtt_password
  reboot_timeout: 0s
  birth_message:
    topic: heatpumpctrl/status
    payload: 'online'
  will_message:
    topic: heatpumpctrl/status
    payload: 'offline'

# Custom component configuration
external_components:
  - source:
      type: local
      path: src

ivt_rego6xx_ctrl:
  id: ivt_rego6xx_ctrl_id
  uart_id: uart_heatpump

# Sensor configuration
# https://esphome.io/components/sensor/index.html
#
# ivt_rego6xx_ctrl_id  : The ID of the custom component.
# ivt_rego6xx_ctrl_cmd : The command to send to the heat pump.
# ivt_rego6xx_ctrl_addr: The address to read by the command.
#
# Important: The system register response will be interpreted as float.
sensor:
  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x0209
    name: gt1
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x020a
    name: gt2
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x020b
    name: gt3
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x020c
    name: gt4
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x020d
    name: gt5
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x020e
    name: gt6
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x020f
    name: gt8
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x0210
    name: gt9
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x0211
    name: gt10
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x0212
    name: gt11
    unit_of_measurement: °C
    state_class: measurement

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x02 # Read system register
    ivt_rego6xx_ctrl_addr: 0x0213
    name: gt3x
    unit_of_measurement: °C
    state_class: measurement

# Binary sensor configuration
# https://esphome.io/components/binary_sensor/index.html
#
# ivt_rego6xx_ctrl_id  : The ID of the custom component.
# ivt_rego6xx_ctrl_cmd : The command to send to the heat pump.
# ivt_rego6xx_ctrl_addr: The address to read by the command.
#
# Important: The system register response will be interpreted as boolean.
binary_sensor:
  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x00 # Read front panel register
    ivt_rego6xx_ctrl_addr: 0x0012
    name: power

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x00 # Read front panel register
    ivt_rego6xx_ctrl_addr: 0x0013
    name: pump

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x00 # Read front panel register
    ivt_rego6xx_ctrl_addr: 0x0014
    name: heating

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x00 # Read front panel register
    ivt_rego6xx_ctrl_addr: 0x0015
    name: boiler

  - platform: ivt_rego6xx_ctrl
    ivt_rego6xx_ctrl_id: ivt_rego6xx_ctrl_id
    ivt_rego6xx_ctrl_cmd: 0x00 # Read front panel register
    ivt_rego6xx_ctrl_addr: 0x0016
    name: alarm
